[+] Building 41.0s (9/9) FINISHED                                                                                                                                                     
 => [internal] load build definition from Dockerfile                                                                                                                             0.0s
 => => transferring dockerfile: 38B                                                                                                                                              0.0s
 => [internal] load .dockerignore                                                                                                                                                0.0s
 => => transferring context: 2B                                                                                                                                                  0.0s
 => [internal] load metadata for docker.io/library/python:3.7.3-stretch                                                                                                          1.9s
 => [1/4] FROM docker.io/library/python:3.7.3-stretch@sha256:205cafadbb7f0c48f2a6d655eb100a9675aa85e6e73958860f488406cce09779                                                    0.0s
 => [internal] load build context                                                                                                                                                0.0s
 => => transferring context: 8.11kB                                                                                                                                              0.0s
 => CACHED [2/4] WORKDIR /app                                                                                                                                                    0.0s
 => [3/4] COPY . app.py /app/                                                                                                                                                    0.3s
 => [4/4] RUN pip install --no-cache-dir --upgrade pip &&    pip install --no-cache-dir --trusted-host pypi.pyhton.org -r requirements.txt                                      36.9s
 => exporting to image                                                                                                                                                           1.8s
 => => exporting layers                                                                                                                                                          1.8s
 => => writing image sha256:2cb869e396923314ad32a8f273588c4699e8f5562cf38529bde87d22aeb3f20d                                                                                     0.0s 
 => => naming to docker.io/library/udacity-project-ml                                                                                                                            0.0s 
                                                                                                                                                                                      
Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
REPOSITORY                    TAG         IMAGE ID       CREATED         SIZE
udacity-project-ml            latest      2cb869e39692   2 seconds ago   1.36GB
<none>                        <none>      9f05f5448687   3 minutes ago   1.36GB
<none>                        <none>      33ad9ccb1ca6   3 days ago      1.19GB
gcr.io/k8s-minikube/kicbase   <none>      7fb60d0ea30e   4 days ago      1.12GB
mysql                         5.7         aa803eda0f25   2 weeks ago     433MB
gcr.io/k8s-minikube/kicbase   v0.0.32     ff7b11088f07   3 months ago    1.15GB
node                          12-alpine   bb6d28039b8c   5 months ago    91MB
docker/getting-started        latest      cb90f98fd791   5 months ago    28.8MB
hello-world                   latest      feb5d9fea6a5   12 months ago   13.3kB
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 194-414-639
[2022-10-08 10:21:27,248] INFO in app: JSON payload: 
{'CHAS': {'0': 0}, 'RM': {'0': 6.575}, 'TAX': {'0': 296.0}, 'PTRATIO': {'0': 15.3}, 'B': {'0': 396.9}, 'LSTAT': {'0': 4.98}}
[2022-10-08 10:21:27,257] INFO in app: Inference payload DataFrame: 
   CHAS     RM    TAX  PTRATIO      B  LSTAT
0     0  6.575  296.0     15.3  396.9   4.98
[2022-10-08 10:21:27,264] INFO in app: Scaling Payload: 
   CHAS     RM    TAX  PTRATIO      B  LSTAT
0     0  6.575  296.0     15.3  396.9   4.98
[2022-10-08 10:21:27,268] INFO in app: output prediction: [20.35373177134412]
INFO:flask.app:output prediction: [20.35373177134412]
[2022-10-08 10:21:27,269] INFO in app: prediction: [20.35373177134412]
INFO:flask.app:prediction: [20.35373177134412]
172.17.0.1 - - [08/Oct/2022 10:21:27] "POST /predict HTTP/1.1" 200 -
INFO:werkzeug:172.17.0.1 - - [08/Oct/2022 10:21:27] "POST /predict HTTP/1.1" 200 -
